{"ast":null,"code":"import _classCallCheck from \"/Users/emanuelpires/Documents/toolit-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emanuelpires/Documents/toolit-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emanuelpires/Documents/toolit-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emanuelpires/Documents/toolit-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emanuelpires/Documents/toolit-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emanuelpires/Documents/toolit-react/client/src/pages/search.js\";\nimport React, { Component } from \"react\";\nimport GoogleMapLoader from \"react-google-maps-loader\";\nimport GooglePlacesSuggest from \"react-google-places-suggest\";\nvar MY_API_KEY = \"AIzaSyDwsdjfskhdbfjsdjbfksiTgnoriOAoUOgsUqOs10J0\"; // fake\n\nvar GoogleSuggest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleSuggest, _React$Component);\n\n  function GoogleSuggest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleSuggest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleSuggest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      value: \"\"\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        search: e.target.value,\n        value: e.target.value\n      });\n    };\n\n    _this.handleSelectSuggest = function (geocodedPrediction, originalPrediction) {\n      console.log(geocodedPrediction, originalPrediction); // eslint-disable-line\n\n      _this.setState({\n        search: \"\",\n        value: geocodedPrediction.formatted_address\n      });\n    };\n\n    _this.handleNoResult = function () {\n      console.log(\"No results for \", _this.state.search);\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleSuggest, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          search = _this$state.search,\n          value = _this$state.value;\n      return React.createElement(ReactGoogleMapLoader, {\n        params: {\n          key: MY_API_KEY,\n          libraries: \"places,geocode\"\n        },\n        render: function render(googleMaps) {\n          return googleMaps && React.createElement(ReactGooglePlacesSuggest, {\n            googleMaps: googleMaps,\n            autocompletionRequest: {\n              input: search // Optional options\n              // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n\n            } // Optional props\n            ,\n            onNoResult: _this2.handleNoResult,\n            onSelectSuggest: _this2.handleSelectSuggest,\n            textNoResults: \"My custom no results text\" // null or \"\" if you want to disable the no results item\n            ,\n            customRender: function customRender(prediction) {\n              return React.createElement(\"div\", {\n                className: \"customWrapper\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 48\n                },\n                __self: this\n              }, prediction ? prediction.description : \"My custom no results text\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            value: value,\n            placeholder: \"Search a location\",\n            onChange: _this2.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GoogleSuggest;\n}(React.Component);\n\nexport { GoogleSuggest as default };","map":{"version":3,"sources":["/Users/emanuelpires/Documents/toolit-react/client/src/pages/search.js"],"names":["React","Component","GoogleMapLoader","GooglePlacesSuggest","MY_API_KEY","GoogleSuggest","state","search","value","handleInputChange","e","setState","target","handleSelectSuggest","geocodedPrediction","originalPrediction","console","log","formatted_address","handleNoResult","key","libraries","googleMaps","input","prediction","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AAEA,IAAMC,UAAU,GAAG,kDAAnB,C,CAAuE;;IAElDC,a;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAKRC,iB,GAAoB,UAAAC,CAAC,EAAI;AACvB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEG,CAAC,CAACE,MAAF,CAASJ,KAAnB;AAA0BA,QAAAA,KAAK,EAAEE,CAAC,CAACE,MAAF,CAASJ;AAA1C,OAAd;AACD,K;;UAEDK,mB,GAAsB,UAACC,kBAAD,EAAqBC,kBAArB,EAA4C;AAChEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ,EAAgCC,kBAAhC,EADgE,CACX;;AACrD,YAAKJ,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAEM,kBAAkB,CAACI;AAAxC,OAAd;AACD,K;;UAEDC,c,GAAiB,YAAM;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAKX,KAAL,CAAWC,MAA1C;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACmB,KAAKD,KADxB;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAEP,aACE,oBAAC,oBAAD;AACE,QAAA,MAAM,EAAE;AACNY,UAAAA,GAAG,EAAEhB,UADC;AAENiB,UAAAA,SAAS,EAAE;AAFL,SADV;AAKE,QAAA,MAAM,EAAE,gBAAAC,UAAU;AAAA,iBAChBA,UAAU,IACR,oBAAC,wBAAD;AACE,YAAA,UAAU,EAAEA,UADd;AAEE,YAAA,qBAAqB,EAAE;AACrBC,cAAAA,KAAK,EAAEhB,MADc,CAErB;AACA;;AAHqB,aAFzB,CAOE;AAPF;AAQE,YAAA,UAAU,EAAE,MAAI,CAACY,cARnB;AASE,YAAA,eAAe,EAAE,MAAI,CAACN,mBATxB;AAUE,YAAA,aAAa,EAAC,2BAVhB,CAU4C;AAV5C;AAWE,YAAA,YAAY,EAAE,sBAAAW,UAAU;AAAA,qBACtB;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACGA,UAAU,GACPA,UAAU,CAACC,WADJ,GAEP,2BAHN,CADsB;AAAA,aAX1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAmBE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEjB,KAFT;AAGE,YAAA,WAAW,EAAC,mBAHd;AAIE,YAAA,QAAQ,EAAE,MAAI,CAACC,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,CAFc;AAAA,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAsCD;;;;EA3DwCT,KAAK,CAACC,S;;SAA5BI,a","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleMapLoader from \"react-google-maps-loader\";\nimport GooglePlacesSuggest from \"react-google-places-suggest\";\n\nconst MY_API_KEY = \"AIzaSyDwsdjfskhdbfjsdjbfksiTgnoriOAoUOgsUqOs10J0\"; // fake\n\nexport default class GoogleSuggest extends React.Component {\n  state = {\n    search: \"\",\n    value: \"\"\n  };\n\n  handleInputChange = e => {\n    this.setState({ search: e.target.value, value: e.target.value });\n  };\n\n  handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n    console.log(geocodedPrediction, originalPrediction); // eslint-disable-line\n    this.setState({ search: \"\", value: geocodedPrediction.formatted_address });\n  };\n\n  handleNoResult = () => {\n    console.log(\"No results for \", this.state.search);\n  };\n\n  render() {\n    const { search, value } = this.state;\n    return (\n      <ReactGoogleMapLoader\n        params={{\n          key: MY_API_KEY,\n          libraries: \"places,geocode\"\n        }}\n        render={googleMaps =>\n          googleMaps && (\n            <ReactGooglePlacesSuggest\n              googleMaps={googleMaps}\n              autocompletionRequest={{\n                input: search\n                // Optional options\n                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n              }}\n              // Optional props\n              onNoResult={this.handleNoResult}\n              onSelectSuggest={this.handleSelectSuggest}\n              textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\n              customRender={prediction => (\n                <div className=\"customWrapper\">\n                  {prediction\n                    ? prediction.description\n                    : \"My custom no results text\"}\n                </div>\n              )}\n            >\n              <input\n                type=\"text\"\n                value={value}\n                placeholder=\"Search a location\"\n                onChange={this.handleInputChange}\n              />\n            </ReactGooglePlacesSuggest>\n          )\n        }\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}